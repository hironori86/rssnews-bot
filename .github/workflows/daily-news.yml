name: Daily DX News Collection

on:
  # 毎日朝8時（JST）に実行 = UTC 23時（前日）
  schedule:
    - cron: '45 1 * * *'
  
  # 手動実行も可能
  workflow_dispatch:
    inputs:
      post_to_social:
        description: 'SNSに実際に投稿するか'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  collect-daily-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create output directory
      run: mkdir -p outputs
    
    - name: Run daily news collection
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        RSS_FEEDS: ${{ secrets.RSS_FEEDS }}
        KEYWORDS: ${{ secrets.KEYWORDS }}
        TEAM_WEBHOOK_URL: ${{ secrets.TEAM_WEBHOOK_URL }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        NOTE_TOKEN: ${{ secrets.NOTE_TOKEN }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
        LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
        LINE_USER_IDS: ${{ secrets.LINE_USER_IDS }}
        OUTPUT_DIR: outputs
        POST_DAY_OF_WEEK: mon
        POST_HOUR_24: 8
      run: |
        if [ "${{ github.event.inputs.post_to_social }}" = "true" ]; then
          echo "🚀 SNSに実際に投稿します"
          python main.py --run-now --post
        else
          echo "📝 投稿案のみ生成します（テスト実行）"
          python main.py --run-now
        fi
    
    - name: Check output files
      run: |
        echo "📁 生成されたファイル一覧:"
        find outputs -type f -name "*.txt" -o -name "*.md" -o -name "*.json" | head -20
        
        echo ""
        echo "📊 ファイル数統計:"
        echo "ツイート案: $(find outputs -name "tweet_*.txt" | wc -l)件"
        echo "note記事案: $(find outputs -name "note_*.md" | wc -l)件"
        echo "データファイル: $(find outputs -name "*.json" | wc -l)件"
    
    - name: Upload daily news artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: daily-news-${{ github.run_number }}
        path: outputs/
        retention-days: 30
    
    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: error-logs-${{ github.run_number }}
        path: |
          *.log
          outputs/
        retention-days: 7
    
    - name: Create summary
      if: always()
      run: |
        echo "## 📊 日次ニュース収集結果" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 生成されたコンテンツ" >> $GITHUB_STEP_SUMMARY
        echo "- ツイート案: $(find outputs -name "tweet_*.txt" 2>/dev/null | wc -l)件" >> $GITHUB_STEP_SUMMARY
        echo "- note記事案: $(find outputs -name "note_*.md" 2>/dev/null | wc -l)件" >> $GITHUB_STEP_SUMMARY
        echo "- 収集記事数: $(find outputs -name "articles.json" -exec jq '.articles | length' {} \; 2>/dev/null | head -1 || echo "0")件" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 実行時刻" >> $GITHUB_STEP_SUMMARY
        echo "- UTC: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "- JST: $(TZ=Asia/Tokyo date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ダウンロード" >> $GITHUB_STEP_SUMMARY
        echo "生成されたファイルは Artifacts からダウンロードできます。" >> $GITHUB_STEP_SUMMARY
